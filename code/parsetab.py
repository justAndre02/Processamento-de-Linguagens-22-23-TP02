
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "leftoulefteleft<>leftcossenleft+-left*/Fim Inicio STRING aleatorio ate atribui chamada_funcao cos de e entao entrada escrever falso fazer fim_para fim_se fun nao nr ou para se sen senao string var verdadeiro axioma : Inicio code Fim code : S code : code ';' S S : C\n             | E\n             | A\n             | condicao condicao : se E entao c_list senao c_list fim_se C : escrever '(' e_list ')' ';'C : entrada '(' var ')' ';' C : para var de E ate E fazer c_list  fim_para  A : fun var '(' args ')' '{' code '}'  A : var atribui E ';' A : var aleatorio '(' E ')' ';' e_list : E\n                   | e_list ',' E  c_list : C\n                     | c_list ';' C N : nr N : E '+' E ';'\n             | E '-' E ';'\n             | E '*' E ';'\n             | E '/' E ';'\n             | E '<' E ';'\n             | E '>' E ';'N : cos '(' E ')' ';'N : sen '(' E ')' ';'B : FB : E e E ';'\n             | E ou E ';' F : verdadeiro  F : falso  F : nao F\n              | nao var  E : var  E : '(' E ')'  E : B\n              | N\n              | string  E : chamada_funcao arg_list\n              | chamada_funcao  args :\n                 | var_list  var_list : var\n                     | var_list ',' var  arg_list : E\n                     | arg_list ',' E comment_single : '#' comment_bodycomment_multi : '#' '*' comment_body '*' '#'comment_body : STRING\n                        | comment_body STRINGC : comment_single\n             | comment_multi"
    
_lr_action_items = {'Inicio':([0,],[2,]),'$end':([1,30,],[0,-1,]),'escrever':([2,31,76,111,112,118,122,],[9,9,9,9,9,9,9,]),'entrada':([2,31,76,111,112,118,122,],[11,11,11,11,11,11,11,]),'para':([2,31,76,111,112,118,122,],[13,13,13,13,13,13,13,]),'var':([2,10,13,19,20,21,29,31,32,33,34,35,36,37,38,39,40,43,44,54,55,72,73,74,75,90,108,110,118,],[12,42,46,42,49,42,57,12,42,42,42,42,42,42,42,42,42,70,42,42,42,42,42,42,96,42,42,119,12,]),'(':([2,9,10,11,19,21,25,26,31,32,33,34,35,36,37,38,39,40,44,45,49,54,55,72,73,74,90,108,118,],[10,40,10,43,10,10,54,55,10,10,10,10,10,10,10,10,10,10,10,72,75,10,10,10,10,10,10,10,10,]),'string':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'chamada_funcao':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'fun':([2,31,118,],[20,20,20,]),'se':([2,31,118,],[21,21,21,]),'#':([2,31,76,101,111,112,118,122,],[22,22,22,113,22,22,22,22,]),'nr':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'cos':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'sen':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'verdadeiro':([2,10,19,21,29,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'falso':([2,10,19,21,29,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'nao':([2,10,19,21,29,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'Fim':([3,4,5,6,7,8,12,14,15,16,17,18,19,23,24,27,28,42,47,48,51,53,56,57,58,69,77,81,82,83,84,85,86,87,88,92,95,104,106,113,114,115,116,124,126,127,],[30,-2,-4,-5,-6,-7,-35,-52,-53,-37,-38,-39,-41,-28,-19,-31,-32,-35,-40,-46,-48,-50,-33,-34,-3,-36,-51,-29,-30,-20,-21,-22,-23,-24,-25,-13,-47,-9,-10,-49,-26,-27,-14,-8,-12,-11,]),';':([3,4,5,6,7,8,12,14,15,16,17,18,19,23,24,27,28,42,47,48,51,53,56,57,58,59,60,61,62,63,64,65,66,69,71,77,81,82,83,84,85,86,87,88,89,91,92,95,99,100,102,103,104,106,107,113,114,115,116,120,121,123,124,125,126,127,],[31,-2,-4,-5,-6,-7,-35,-52,-53,-37,-38,-39,-41,-28,-19,-31,-32,-35,-40,-46,-48,-50,-33,-34,-3,81,82,83,84,85,86,87,88,-36,92,-51,-29,-30,-20,-21,-22,-23,-24,-25,104,106,-13,-47,112,-17,114,115,-9,-10,116,-49,-26,-27,-14,112,-18,31,-8,112,-12,-11,]),'}':([4,5,6,7,8,12,14,15,16,17,18,19,23,24,27,28,42,47,48,51,53,56,57,58,69,77,81,82,83,84,85,86,87,88,92,95,104,106,113,114,115,116,123,124,126,127,],[-2,-4,-5,-6,-7,-35,-52,-53,-37,-38,-39,-41,-28,-19,-31,-32,-35,-40,-46,-48,-50,-33,-34,-3,-36,-51,-29,-30,-20,-21,-22,-23,-24,-25,-13,-47,-9,-10,-49,-26,-27,-14,126,-8,-12,-11,]),'e':([6,12,16,17,18,19,23,24,27,28,41,42,47,48,50,56,57,59,60,61,62,63,64,65,66,68,69,71,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[32,-35,-37,-38,-39,-41,-28,-19,-31,-32,32,-35,-40,32,32,-33,-34,32,32,32,32,32,32,32,32,32,-36,32,32,32,-29,-30,-20,-21,-22,-23,-24,-25,32,32,32,32,-26,-27,32,]),'ou':([6,12,16,17,18,19,23,24,27,28,41,42,47,48,50,56,57,59,60,61,62,63,64,65,66,68,69,71,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[33,-35,-37,-38,-39,-41,-28,-19,-31,-32,33,-35,-40,33,33,-33,-34,33,33,33,33,33,33,33,33,33,-36,33,33,33,-29,-30,-20,-21,-22,-23,-24,-25,33,33,33,33,-26,-27,33,]),'+':([6,12,16,17,18,19,23,24,27,28,41,42,47,48,50,56,57,59,60,61,62,63,64,65,66,68,69,71,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[34,-35,-37,-38,-39,-41,-28,-19,-31,-32,34,-35,-40,34,34,-33,-34,34,34,34,34,34,34,34,34,34,-36,34,34,34,-29,-30,-20,-21,-22,-23,-24,-25,34,34,34,34,-26,-27,34,]),'-':([6,12,16,17,18,19,23,24,27,28,41,42,47,48,50,56,57,59,60,61,62,63,64,65,66,68,69,71,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[35,-35,-37,-38,-39,-41,-28,-19,-31,-32,35,-35,-40,35,35,-33,-34,35,35,35,35,35,35,35,35,35,-36,35,35,35,-29,-30,-20,-21,-22,-23,-24,-25,35,35,35,35,-26,-27,35,]),'*':([6,12,16,17,18,19,22,23,24,27,28,41,42,47,48,50,53,56,57,59,60,61,62,63,64,65,66,68,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[36,-35,-37,-38,-39,-41,52,-28,-19,-31,-32,36,-35,-40,36,36,-50,-33,-34,36,36,36,36,36,36,36,36,36,-36,36,-51,101,36,36,-29,-30,-20,-21,-22,-23,-24,-25,36,36,36,36,-26,-27,36,]),'/':([6,12,16,17,18,19,23,24,27,28,41,42,47,48,50,56,57,59,60,61,62,63,64,65,66,68,69,71,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[37,-35,-37,-38,-39,-41,-28,-19,-31,-32,37,-35,-40,37,37,-33,-34,37,37,37,37,37,37,37,37,37,-36,37,37,37,-29,-30,-20,-21,-22,-23,-24,-25,37,37,37,37,-26,-27,37,]),'<':([6,12,16,17,18,19,23,24,27,28,41,42,47,48,50,56,57,59,60,61,62,63,64,65,66,68,69,71,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[38,-35,-37,-38,-39,-41,-28,-19,-31,-32,38,-35,-40,38,38,-33,-34,38,38,38,38,38,38,38,38,38,-36,38,38,38,-29,-30,-20,-21,-22,-23,-24,-25,38,38,38,38,-26,-27,38,]),'>':([6,12,16,17,18,19,23,24,27,28,41,42,47,48,50,56,57,59,60,61,62,63,64,65,66,68,69,71,79,80,81,82,83,84,85,86,87,88,93,94,95,105,114,115,117,],[39,-35,-37,-38,-39,-41,-28,-19,-31,-32,39,-35,-40,39,39,-33,-34,39,39,39,39,39,39,39,39,39,-36,39,39,39,-29,-30,-20,-21,-22,-23,-24,-25,39,39,39,39,-26,-27,39,]),'atribui':([12,],[44,]),'aleatorio':([12,],[45,]),'senao':([14,15,51,53,77,99,100,104,106,113,121,127,],[-52,-53,-48,-50,-51,111,-17,-9,-10,-49,-18,-11,]),'fim_se':([14,15,51,53,77,100,104,106,113,120,121,127,],[-52,-53,-48,-50,-51,-17,-9,-10,-49,124,-18,-11,]),'fim_para':([14,15,51,53,77,100,104,106,113,121,125,127,],[-52,-53,-48,-50,-51,-17,-9,-10,-49,-18,127,-11,]),')':([16,17,18,19,23,24,27,28,41,42,47,48,56,57,67,68,69,70,75,79,80,81,82,83,84,85,86,87,88,93,95,96,97,98,105,114,115,119,],[-37,-38,-39,-41,-28,-19,-31,-32,69,-35,-40,-46,-33,-34,89,-15,-36,91,-42,102,103,-29,-30,-20,-21,-22,-23,-24,-25,107,-47,-44,109,-43,-16,-26,-27,-45,]),',':([16,17,18,19,23,24,27,28,42,47,48,56,57,67,68,69,81,82,83,84,85,86,87,88,95,96,98,105,114,115,119,],[-37,-38,-39,-41,-28,-19,-31,-32,-35,74,-46,-33,-34,90,-15,-36,-29,-30,-20,-21,-22,-23,-24,-25,-47,-44,110,-16,-26,-27,-45,]),'entao':([16,17,18,19,23,24,27,28,42,47,48,50,56,57,69,81,82,83,84,85,86,87,88,95,114,115,],[-37,-38,-39,-41,-28,-19,-31,-32,-35,-40,-46,76,-33,-34,-36,-29,-30,-20,-21,-22,-23,-24,-25,-47,-26,-27,]),'ate':([16,17,18,19,23,24,27,28,42,47,48,56,57,69,81,82,83,84,85,86,87,88,94,95,114,115,],[-37,-38,-39,-41,-28,-19,-31,-32,-35,-40,-46,-33,-34,-36,-29,-30,-20,-21,-22,-23,-24,-25,108,-47,-26,-27,]),'fazer':([16,17,18,19,23,24,27,28,42,47,48,56,57,69,81,82,83,84,85,86,87,88,95,114,115,117,],[-37,-38,-39,-41,-28,-19,-31,-32,-35,-40,-46,-33,-34,-36,-29,-30,-20,-21,-22,-23,-24,-25,-47,-26,-27,122,]),'STRING':([22,51,52,53,77,78,],[53,77,53,-50,-51,77,]),'de':([46,],[73,]),'{':([109,],[118,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'axioma':([0,],[1,]),'code':([2,118,],[3,123,]),'S':([2,31,118,],[4,58,4,]),'C':([2,31,76,111,112,118,122,],[5,5,100,100,121,5,100,]),'E':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[6,41,48,50,6,59,60,61,62,63,64,65,66,68,71,79,80,93,94,95,105,117,6,]),'A':([2,31,118,],[7,7,7,]),'condicao':([2,31,118,],[8,8,8,]),'comment_single':([2,31,76,111,112,118,122,],[14,14,14,14,14,14,14,]),'comment_multi':([2,31,76,111,112,118,122,],[15,15,15,15,15,15,15,]),'B':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'N':([2,10,19,21,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'F':([2,10,19,21,29,31,32,33,34,35,36,37,38,39,40,44,54,55,72,73,74,90,108,118,],[23,23,23,23,56,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'arg_list':([19,],[47,]),'comment_body':([22,52,],[51,78,]),'e_list':([40,],[67,]),'args':([75,],[97,]),'var_list':([75,],[98,]),'c_list':([76,111,122,],[99,120,125,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> axioma","S'",1,None,None,None),
  ('axioma -> Inicio code Fim','axioma',3,'p_axioma0','grammar.py',43),
  ('code -> S','code',1,'p_code0','grammar.py',47),
  ('code -> code ; S','code',3,'p_code1','grammar.py',51),
  ('S -> C','S',1,'p_s','grammar.py',56),
  ('S -> E','S',1,'p_s','grammar.py',57),
  ('S -> A','S',1,'p_s','grammar.py',58),
  ('S -> condicao','S',1,'p_s','grammar.py',59),
  ('condicao -> se E entao c_list senao c_list fim_se','condicao',7,'p_condicao','grammar.py',63),
  ('C -> escrever ( e_list ) ;','C',5,'p_c1','grammar.py',71),
  ('C -> entrada ( var ) ;','C',5,'p_c2','grammar.py',75),
  ('C -> para var de E ate E fazer c_list fim_para','C',9,'p_c3','grammar.py',79),
  ('A -> fun var ( args ) { code }','A',8,'p_a0','grammar.py',88),
  ('A -> var atribui E ;','A',4,'p_a1','grammar.py',92),
  ('A -> var aleatorio ( E ) ;','A',6,'p_a2','grammar.py',96),
  ('e_list -> E','e_list',1,'p_e_list','grammar.py',100),
  ('e_list -> e_list , E','e_list',3,'p_e_list','grammar.py',101),
  ('c_list -> C','c_list',1,'p_c_list','grammar.py',108),
  ('c_list -> c_list ; C','c_list',3,'p_c_list','grammar.py',109),
  ('N -> nr','N',1,'p_n1','grammar.py',117),
  ('N -> E + E ;','N',4,'p_n2','grammar.py',121),
  ('N -> E - E ;','N',4,'p_n2','grammar.py',122),
  ('N -> E * E ;','N',4,'p_n2','grammar.py',123),
  ('N -> E / E ;','N',4,'p_n2','grammar.py',124),
  ('N -> E < E ;','N',4,'p_n2','grammar.py',125),
  ('N -> E > E ;','N',4,'p_n2','grammar.py',126),
  ('N -> cos ( E ) ;','N',5,'p_n3','grammar.py',130),
  ('N -> sen ( E ) ;','N',5,'p_n4','grammar.py',134),
  ('B -> F','B',1,'p_b0','grammar.py',138),
  ('B -> E e E ;','B',4,'p_b1','grammar.py',142),
  ('B -> E ou E ;','B',4,'p_b1','grammar.py',143),
  ('F -> verdadeiro','F',1,'p_f1','grammar.py',147),
  ('F -> falso','F',1,'p_f2','grammar.py',151),
  ('F -> nao F','F',2,'p_f3','grammar.py',155),
  ('F -> nao var','F',2,'p_f3','grammar.py',156),
  ('E -> var','E',1,'p_e1','grammar.py',160),
  ('E -> ( E )','E',3,'p_e2','grammar.py',164),
  ('E -> B','E',1,'p_e3','grammar.py',168),
  ('E -> N','E',1,'p_e3','grammar.py',169),
  ('E -> string','E',1,'p_e3','grammar.py',170),
  ('E -> chamada_funcao arg_list','E',2,'p_e4','grammar.py',174),
  ('E -> chamada_funcao','E',1,'p_e4','grammar.py',175),
  ('args -> <empty>','args',0,'p_args','grammar.py',180),
  ('args -> var_list','args',1,'p_args','grammar.py',181),
  ('var_list -> var','var_list',1,'p_var_list','grammar.py',185),
  ('var_list -> var_list , var','var_list',3,'p_var_list','grammar.py',186),
  ('arg_list -> E','arg_list',1,'p_arg_list','grammar.py',194),
  ('arg_list -> arg_list , E','arg_list',3,'p_arg_list','grammar.py',195),
  ('comment_single -> # comment_body','comment_single',2,'p_comment_single','grammar.py',203),
  ('comment_multi -> # * comment_body * #','comment_multi',5,'p_comment_multi','grammar.py',207),
  ('comment_body -> STRING','comment_body',1,'p_comment_body','grammar.py',211),
  ('comment_body -> comment_body STRING','comment_body',2,'p_comment_body','grammar.py',212),
  ('C -> comment_single','C',1,'p_c','grammar.py',219),
  ('C -> comment_multi','C',1,'p_c','grammar.py',220),
]
